brew doctor
brew
brew help
dropbox
brew commands
brew info
cd .config
vim aliases
ssheval
sshadd
brew install --HEAD neovim
\ps
git clone https://github.com/pcmariani/scripts.git
mv scripts/ ..
256
brew install --HEAD neovim --debug --verbose
which neovim
which nvim
/opt/homebrew/bin/nvim/
/opt/homebrew/bin/nvim
which tmux
brew list
brew install tmux
brew search --cask font
brew search --cask monaco
brew --cask install font-hack-nerd-font
brew install --cask font-hack-nerd-font
lla
lad
man brew
brew search --cask nf
brew search --cask nerdfont
brew install --cask font-fira-code-nerd-font
mv .tmux.conf .tmux.conf-bak
v .tmux.conf-bak
echo git clone https://github.com/tmux-plugin/tpm ~/.tmux/plugins/tpm
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
nvim
mv .tmux.conf-bak .tmux.conf
cd .tmux/
cd plugins/
cd tpm/
v .tmux.conf
ta
tmux
$EDITOR 
$EDITOR aasd
which emacsclient
echo $EDITOR
emacsclient --help
$EDITOR
ea
emacs --help
emacs
which doom
cd ~
cd .doom.d/
cd .emacs.d
cd ../.emacs.d/
ls bin/
~/.emacs.d/bin/doom sync
eze
cd bin
brew search ispel
brew install ispell --with-lang-en
brew search aspell
brew install aspell
~
doom sync
.z
cat
cd projects/
cd pfizer-dap-tables/
alias
alias | grep git
gls
lazygit
cd BoomiTestBed/
cd .git/
cd hooks/
v
ch+x post-commit
cd ../pfizer-dap-tables/
cd ~/projects/pfizer-dap-tables/
git diff origin
git diff master
git diff master origin/master
v ~/.gitconfig
alias | grep diff
./__TEST.sh norm/main 
ll
lsd
mv DAP.TBL.FMT.05__APPLY_ColumnWidths.b.groovy 05_APPLY_ColumnWidths.b.groovy
mv DAP.TBL.QRY.06__PREPARE_DbSelect.b.groovy 06_PREPARE_DbSelect.b.groovy
mv DAP.TBL.STR.01__PARSE_Params.b.groovy 01_PARSE_Params.b.groovy
mv 01_PARSE_Params.b.groovy
mv 01_PARSE_Params.b.groovy DAP.TBL.STR.01__PARSE_Params.b.groovy
mv 05_APPLY_ColumnWidths.b.groovy DAP.TBL.FMT.05__APPLY_ColumnWidths.b.groovy
mv 06_PREPARE_DbSelect.b.groovy DAP.TBL.QRY.06__PREPARE_DbSelect.b.groovy
git mv --help
git mv 01_PARSE_Params.b.groovy DAP.TBL.STR.01__PARSE_Params.b.groovy
ps 
git mv DAP.TBL.FMT.05__APPLY_ColumnWidths.b.groovy 05_APPLY_ColumnWidths.b.groovy
git mv DAP.TBL.QRY.06__PREPARE_DbSelect.b.groovy 06_PREPARE_DbSelect.b.groovy
git mv DAP.TBL.STR.01__PARSE_Params.b.groovy 01_PARSE_Params.b.groovy
git mv DAP.TBL.STR.021__CONSTRUCT_Title.b.groovy 021_CONSTRUCT_Title.b.groovy
git mv DAP.TBL.STR.025__REMOVE_Empty_Rows_2.b.groovy 025_REMOVE_Empty_Rows_2.b.groovy
git mv DAP.TBL.STR.02__CREATE_RowSets.b.groovy 02_CREATE_RowSets.b.groovy
git mv DAP.TBL.STR.03__BUILD_Html.b.groovy 03_BUILD_Html.b.groovy
git mv DAP.TBL.STR.04__REMOVE_Empty_Rows.b.groovy 04_REMOVE_Empty_Rows.b.groovy
git commit -m "renamed file"
gs
cd norm/
v main.properties
bt
jjjjjjjjjjjjbt pf_dap_formatting_tests.yml
bt pf_dap_formatting_tests.yml
boomiScriptRun.sh
la src
cd src
git rename boomiScriptInit.groovy BoomiScriptInit.groovy
git mv boomiScriptInit.groovy BoomiScriptInit.groovy
git mv boomiScriptRun.groovy BoomiScriptRun.groovy
git mv boomiScriptTest.groovy BoomiScriptTest.groovy
v BoomiScriptInit.groovy BoomiScriptRun.groovy BoomiScriptTest.groovy
git mv boomiScriptInit.sh bsinit.sh
git mv boomiScriptRun.sh bsrun.sh
git mv boomiScriptTest.sh bstest.sh
git cp bsinit.sh b.sh
cp bsinit.sh b.sh
v b.sh
boomi test
boo test
boo run _tests_GroupBy_Db2Flow.yaml > stab1_groupBy_db.json
boo run _tests_PivotOn_Db2Flow.yaml > stab1_pivotOn_db.json
boo run _tests_GroupBy_Db2Flow.yaml > stab1_groupBy_flow.json 
boo run _tests_PivotOn_Db2Flow.yaml > stab1_pivotOn_flow.json 
boo init -t MDH_GlobalVars.yaml
boo init MDH_GlobalVars.yaml
rm *.yaml
rm *yaml*
touch _tests_MDH_GlobalVars.yaml
nvim .
cd _testInit/
cd te
rm _test_te.yaml te.groovy
mkdir ttest
touch te.json
rm te.dat
cat hello.groovy
cat _test_hello.yaml
rm hello.groovy
rm *hello*
rm te.properties
boo run _test_hello.yaml
boo run _tests_MDH_GlobalVars.yaml
nvim _test_summaryTable.yaml
cd ~/projects/pfizer-dap/summaryTables/
boo run _test_summaryTable.yaml
v ../.gitignore
git status
mv _test_summaryTable.yaml _test_SPLIT_Tables__COLLECT_ParamValues.yaml
touch ~test.yaml
touch -test.yaml
touch +test.yaml
touch .test.yaml
git mv 01_SPLIT_Tables__COLLECT_ParamValues.groovy s01_SPLIT_Tables__COLLECT_ParamValues.groovy
mv _test_SPLIT_Tables__COLLECT_ParamValues.yaml _tests.yaml
rm +test.yaml
rm .test.yaml
mkdir ../DAP065_SPLIT_Tables__COLLECT_ParamValues
mv _tests.yaml ../DAP065_SPLIT_Tables__COLLECT_ParamValues/
git mv ba1.* ../DAP065_SPLIT_Tables__COLLECT_ParamValues/
git mv s01_SPLIT_Tables__COLLECT_ParamValues.groovy ../DAP065_SPLIT_Tables__COLLECT_ParamValues/
g
nvim _tests.yaml
cd ../summaryTables/
nvim 01OLD_SORT_SummaryLines.groovy
cd DAP065_ADD_sqlParamValues_to_SummaryTableRows/
cp ../DAP065_SPLIT_Tables__COLLECT_ParamValues/_tests.yaml .
nvim _tests.yaml DAP065_ADD_sqlParamValues_to_SummaryTableRows.groovy 01OLD_SORT_SummaryLines.groovy
mv DAP065_ADD_sqlParamValues_to_SummaryTableRows.groovy s01_ADD_sqlParamValues_to_SummaryTableRows.groovy
mv 01OLD_SORT_SummaryLines.groovy s01OLD_SORT_SummaryLines.groovy
nvim _tests.yaml s01OLD_SORT_SummaryLines.groovy s01_ADD_sqlParamValues_to_SummaryTableRows.groovy
boo init
nvim _test_s01_DO_SummaryTables.groovy.yaml
cd ../formatting/
../DAP065_SortMultiselect/
boo run --debug  _tests.yaml 
kboo run --debug  _tests.yaml
source ~/.zshenv
boo run --debug  _tests.yamlboo run --debug  _tests.yaml
boo run _tests_pf-dap-formatting.yml
\u001b[s
"\u001b[s"
echo \u001b[s
echo "\u001b[s"             // save cursor position\
"\u001b[5000;5000H"    // move to col 5000 row 5000\
"\u001b[6n"            // request cursor position\
"\u001b[u"             // restore cursor position\

echo "\u001b[u"
cler
echo "\u001b[s"; echo "\u001b[5000;5000H"; echo "\u001b[6n"; echo "\u001b[u"
echo "\u001b[s" && echo "\u001b[5000;5000H" &&  echo "\u001b[6n" && echo "\u001b[u"
echo "\u001b[s"
echo "\u001b[5000;5000H"
echo "\u001b[6n"
echo env
env | \grep COLUMNS
echo $COLUMNS
clear
git push
git -f push
git push force
git push --force
git pull
cd ..
cd pivotConfigsTable/
nvim _tests_GroupBy_Flow2Db.yaml ba1_groupBy_flow.json
..
cd DAP065_SPLIT_Tables__COLLECT_ParamValues/
\ls
v -O _tests.yaml s01_SPLIT_Tables__COLLECT_ParamValues.groovy
tput cols
echo $COLS
env
echo env | \grep COLS
echo env | \grep columns
boo run _test_create_configs.yaml
boo run _tests.yaml
boo run --debug  _tests.yaml
v src/DataContext2.groovy
cd ../pfizer-dap/DAP065_SortMultiselect/
boo run _tests.yaml:TermExec cmd=''
\

v -O pivotConfigs_Db2Flow.groovy
boo run _tests_GroupBy_Db2Flow.yaml
boo run _tests_PivotOn_Db2Flow.yaml
boo run _tests_PivotOn_Flow2Db.yaml
../DAP065_SPLIT_Tables__COLLECT_ParamValues/
boo run _tests_GroupBy_Flow2Db.yaml
boo run -debug _tests.yaml
boo run _tests_formatting_only.yaml
source ~/.config/aliases
boo run _tests.yaml
python --v
python -v
python --version
brew search python
which python
.ze
pyenv
pyenv global
pyenv which
pyenv versions
pyenv global python3.12.3
pyenv local 3.12.3
pyenv version
eval "$(pyenv init --path)"
pyenv global 3.12.3
echo $path
echo $path | cut ' ' \n
echo $path | cut ' ' $'\n'
echo $path | tr ' ' $'\n'
pyenv update
brew install pyenv --head
brew uninstall pyenv
brew uninstall pyenv --head
python3 --version
python3 -m venv .
which python3
ls /opt/homebrew/bin/pydoc3.12
ls /opt/homebrew/bin/python3.12
ls /opt/homebrew/bin/python3.12-config
cd /opt/homebrew/bin/
ls python
ls python*
cd python3
1
source ./bin/activate
pip3 install jupyter
python3 -m pip3 freeze
python3 -m pip freeze
pip3 freeze
jupyter notebook
deactivate
pip3 -V
brew tab ggozad/formaulas
brew tap ggozad/formulas
brew install ggozad/formulas/oterm
