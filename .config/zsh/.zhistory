brew doctor
brew
brew help
dropbox
brew commands
brew info
vim aliases
ssheval
sshadd
brew install --HEAD neovim
\ps
git clone https://github.com/pcmariani/scripts.git
mv scripts/ ..
256
brew install --HEAD neovim --debug --verbose
which neovim
which nvim
/opt/homebrew/bin/nvim/
/opt/homebrew/bin/nvim
which tmux
brew list
brew install tmux
brew search --cask font
brew search --cask monaco
brew --cask install font-hack-nerd-font
brew install --cask font-hack-nerd-font
lla
lad
man brew
brew search --cask nf
brew search --cask nerdfont
brew install --cask font-fira-code-nerd-font
mv .tmux.conf .tmux.conf-bak
v .tmux.conf-bak
echo git clone https://github.com/tmux-plugin/tpm ~/.tmux/plugins/tpm
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
nvim
mv .tmux.conf-bak .tmux.conf
cd .tmux/
cd plugins/
cd tpm/
v .tmux.conf
ta
tmux
$EDITOR 
$EDITOR aasd
which emacsclient
echo $EDITOR
emacsclient --help
$EDITOR
ea
emacs --help
emacs
which doom
cd ~
cd .doom.d/
cd .emacs.d
cd ../.emacs.d/
ls bin/
~/.emacs.d/bin/doom sync
eze
cd bin
brew search ispel
brew install ispell --with-lang-en
brew search aspell
brew install aspell
doom sync
cat
cd projects/
cd pfizer-dap-tables/
alias
alias | grep git
gls
lazygit
cd BoomiTestBed/
cd .git/
cd hooks/
v
ch+x post-commit
cd ../pfizer-dap-tables/
cd ~/projects/pfizer-dap-tables/
git diff origin
git diff master
git diff master origin/master
v ~/.gitconfig
alias | grep diff
./__TEST.sh norm/main 
ll
lsd
mv DAP.TBL.FMT.05__APPLY_ColumnWidths.b.groovy 05_APPLY_ColumnWidths.b.groovy
mv DAP.TBL.QRY.06__PREPARE_DbSelect.b.groovy 06_PREPARE_DbSelect.b.groovy
mv DAP.TBL.STR.01__PARSE_Params.b.groovy 01_PARSE_Params.b.groovy
mv 01_PARSE_Params.b.groovy
mv 01_PARSE_Params.b.groovy DAP.TBL.STR.01__PARSE_Params.b.groovy
mv 05_APPLY_ColumnWidths.b.groovy DAP.TBL.FMT.05__APPLY_ColumnWidths.b.groovy
mv 06_PREPARE_DbSelect.b.groovy DAP.TBL.QRY.06__PREPARE_DbSelect.b.groovy
git mv --help
git mv 01_PARSE_Params.b.groovy DAP.TBL.STR.01__PARSE_Params.b.groovy
ps 
git mv DAP.TBL.FMT.05__APPLY_ColumnWidths.b.groovy 05_APPLY_ColumnWidths.b.groovy
git mv DAP.TBL.QRY.06__PREPARE_DbSelect.b.groovy 06_PREPARE_DbSelect.b.groovy
git mv DAP.TBL.STR.01__PARSE_Params.b.groovy 01_PARSE_Params.b.groovy
git mv DAP.TBL.STR.021__CONSTRUCT_Title.b.groovy 021_CONSTRUCT_Title.b.groovy
git mv DAP.TBL.STR.025__REMOVE_Empty_Rows_2.b.groovy 025_REMOVE_Empty_Rows_2.b.groovy
git mv DAP.TBL.STR.02__CREATE_RowSets.b.groovy 02_CREATE_RowSets.b.groovy
git mv DAP.TBL.STR.03__BUILD_Html.b.groovy 03_BUILD_Html.b.groovy
git mv DAP.TBL.STR.04__REMOVE_Empty_Rows.b.groovy 04_REMOVE_Empty_Rows.b.groovy
git commit -m "renamed file"
gs
cd norm/
v main.properties
bt
jjjjjjjjjjjjbt pf_dap_formatting_tests.yml
bt pf_dap_formatting_tests.yml
boomiScriptRun.sh
la src
cd src
git rename boomiScriptInit.groovy BoomiScriptInit.groovy
git mv boomiScriptInit.groovy BoomiScriptInit.groovy
git mv boomiScriptRun.groovy BoomiScriptRun.groovy
git mv boomiScriptTest.groovy BoomiScriptTest.groovy
v BoomiScriptInit.groovy BoomiScriptRun.groovy BoomiScriptTest.groovy
git mv boomiScriptInit.sh bsinit.sh
git mv boomiScriptRun.sh bsrun.sh
git mv boomiScriptTest.sh bstest.sh
git cp bsinit.sh b.sh
cp bsinit.sh b.sh
v b.sh
boomi test
boo test
boo run _tests_GroupBy_Db2Flow.yaml > stab1_groupBy_db.json
boo run _tests_PivotOn_Db2Flow.yaml > stab1_pivotOn_db.json
boo run _tests_GroupBy_Db2Flow.yaml > stab1_groupBy_flow.json 
boo run _tests_PivotOn_Db2Flow.yaml > stab1_pivotOn_flow.json 
boo init -t MDH_GlobalVars.yaml
boo init MDH_GlobalVars.yaml
rm *.yaml
rm *yaml*
touch _tests_MDH_GlobalVars.yaml
nvim .
cd _testInit/
cd te
rm _test_te.yaml te.groovy
mkdir ttest
touch te.json
rm te.dat
cat hello.groovy
cat _test_hello.yaml
rm hello.groovy
rm *hello*
rm te.properties
boo run _test_hello.yaml
boo run _tests_MDH_GlobalVars.yaml
nvim _test_summaryTable.yaml
cd ~/projects/pfizer-dap/summaryTables/
boo run _test_summaryTable.yaml
v ../.gitignore
git status
mv _test_summaryTable.yaml _test_SPLIT_Tables__COLLECT_ParamValues.yaml
touch ~test.yaml
touch -test.yaml
touch +test.yaml
touch .test.yaml
git mv 01_SPLIT_Tables__COLLECT_ParamValues.groovy s01_SPLIT_Tables__COLLECT_ParamValues.groovy
mv _test_SPLIT_Tables__COLLECT_ParamValues.yaml _tests.yaml
rm +test.yaml
rm .test.yaml
mkdir ../DAP065_SPLIT_Tables__COLLECT_ParamValues
mv _tests.yaml ../DAP065_SPLIT_Tables__COLLECT_ParamValues/
git mv ba1.* ../DAP065_SPLIT_Tables__COLLECT_ParamValues/
git mv s01_SPLIT_Tables__COLLECT_ParamValues.groovy ../DAP065_SPLIT_Tables__COLLECT_ParamValues/
g
nvim _tests.yaml
cd ../summaryTables/
nvim 01OLD_SORT_SummaryLines.groovy
cd DAP065_ADD_sqlParamValues_to_SummaryTableRows/
cp ../DAP065_SPLIT_Tables__COLLECT_ParamValues/_tests.yaml .
nvim _tests.yaml DAP065_ADD_sqlParamValues_to_SummaryTableRows.groovy 01OLD_SORT_SummaryLines.groovy
mv DAP065_ADD_sqlParamValues_to_SummaryTableRows.groovy s01_ADD_sqlParamValues_to_SummaryTableRows.groovy
mv 01OLD_SORT_SummaryLines.groovy s01OLD_SORT_SummaryLines.groovy
nvim _tests.yaml s01OLD_SORT_SummaryLines.groovy s01_ADD_sqlParamValues_to_SummaryTableRows.groovy
boo init
nvim _test_s01_DO_SummaryTables.groovy.yaml
cd ../formatting/
../DAP065_SortMultiselect/
boo run --debug  _tests.yaml 
kboo run --debug  _tests.yaml
source ~/.zshenv
boo run --debug  _tests.yamlboo run --debug  _tests.yaml
boo run _tests_pf-dap-formatting.yml
\u001b[s
"\u001b[s"
echo \u001b[s
echo "\u001b[s"             // save cursor position\
"\u001b[5000;5000H"    // move to col 5000 row 5000\
"\u001b[6n"            // request cursor position\
"\u001b[u"             // restore cursor position\

echo "\u001b[u"
cler
echo "\u001b[s"; echo "\u001b[5000;5000H"; echo "\u001b[6n"; echo "\u001b[u"
echo "\u001b[s" && echo "\u001b[5000;5000H" &&  echo "\u001b[6n" && echo "\u001b[u"
echo "\u001b[s"
echo "\u001b[5000;5000H"
echo "\u001b[6n"
echo env
env | \grep COLUMNS
echo $COLUMNS
clear
git push
git -f push
git push force
git push --force
git pull
cd ..
cd pivotConfigsTable/
nvim _tests_GroupBy_Flow2Db.yaml ba1_groupBy_flow.json
cd DAP065_SPLIT_Tables__COLLECT_ParamValues/
\ls
v -O _tests.yaml s01_SPLIT_Tables__COLLECT_ParamValues.groovy
tput cols
echo $COLS
env
echo env | \grep COLS
echo env | \grep columns
boo run _test_create_configs.yaml
boo run _tests.yaml
boo run --debug  _tests.yaml
v src/DataContext2.groovy
cd ../pfizer-dap/DAP065_SortMultiselect/
boo run _tests.yaml:TermExec cmd=''
\

v -O pivotConfigs_Db2Flow.groovy
boo run _tests_GroupBy_Db2Flow.yaml
boo run _tests_PivotOn_Db2Flow.yaml
boo run _tests_PivotOn_Flow2Db.yaml
../DAP065_SPLIT_Tables__COLLECT_ParamValues/
boo run _tests_GroupBy_Flow2Db.yaml
boo run -debug _tests.yaml
boo run _tests_formatting_only.yaml
source ~/.config/aliases
boo run _tests.yaml
python --v
python -v
python --version
brew search python
which python
.ze
pyenv
pyenv global
pyenv which
pyenv versions
pyenv global python3.12.3
pyenv local 3.12.3
pyenv version
eval "$(pyenv init --path)"
pyenv global 3.12.3
echo $path
echo $path | cut ' ' \n
echo $path | cut ' ' $'\n'
echo $path | tr ' ' $'\n'
pyenv update
brew install pyenv --head
brew uninstall pyenv
brew uninstall pyenv --head
python3 --version
python3 -m venv .
which python3
ls /opt/homebrew/bin/pydoc3.12
ls /opt/homebrew/bin/python3.12
ls /opt/homebrew/bin/python3.12-config
cd /opt/homebrew/bin/
ls python
ls python*
cd python3
source ./bin/activate
pip3 install jupyter
python3 -m pip3 freeze
python3 -m pip freeze
pip3 freeze
jupyter notebook
deactivate
pip3 -V
brew tab ggozad/formaulas
brew tap ggozad/formulas
brew install ggozad/formulas/oterm
cat /etc/shells
v ~/.config/karabiner.edn
cd .config/zsh
cd .config/zsh/
cd .config
\cd
\cd .config/zsh
~
\cd ~
brew search zsh | fzf
brew install zsh-autosuggestions
brew install zsh-syntax-highlighting
brew install zsh-vi-mode
cd Downloads/\ .pdf
1
iasdfasdf
echo hello
cd | fzf
cd **
cd *
vcd
zsh search zsh
brew search zsh
zsh --version
fzf
exec zsh
nvim .zshrc
brew install fish
fish
eixt
cd Downloads
cd Documents
..
v .zshrc
.z
source .zshrc
v .zshrc
eixt
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
cd Documents/p
v .zshrc
exit
v .zshrc
exit
zsh --version
v .zshrc
eixt
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
echo $LS_COLORS
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v .zshrc
exit
v
v .zshrc
brew install zsh-autopair\
\

exit
v .zshrc
h
cd
cd Documents
~
v .zshrc
clear
fg
exit
v .zshrc
exit
v .zshrc
cd
fzf
v .zshrc
echo $FZF_DEFAULT_COMMAND
fd
fd .zshrc
fd --hidden --strip-cwd-prefix --exclude .git
fd --hidden --strip-cwd-prefix --exclude .git "zshrc"
which fd
v .zshrc
exit
cd .
cd .config
tmux
..
v .tmux.conf
v .zshrc
cp .zshrc ~/.config/zsh/.zshrc
tmux
exit
cd .config
rg export
clear
cd..
..
cd .vim
ls
cd after
ls
cd ftplugin
ls
..
ls
mkdir syntax
cd syntax
mkdir log
cd log
touch log.vim
v log.vim
cd **
cd .config
..
clear
which rg
rg
rg zsh
rg export
cd .config
rg export
rg
rg export .
exit
tldr rg
rg keywork
rg keyword
..
rg keyword
..
rg keyword
..
rg keyword
..
rg keyword
cd .config
rg keyword
cd .config
rg keyword
exit
unction rgfzf {\
  command rg --color=always --line-number --no-heading --smart-case "${*:-}" \\
  | command fzf -d':' --ansi \\
    --preview "command bat -p --color=always {1} --highlight-line {2}" \\
    --preview-window ~8,+{2}-5 \\
  | awk -F':' '{print $1}'\
}
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
rgfzf export
..
rgfzf jsonslurper
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case -g " -g "!Applications" "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case -g '!Applications' "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case -g '!Applications' "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
rgfzf jsonslurper
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case -g '!Library' "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
rgfzf jsonslurper
rgfzf zshrc
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case -g '!Library' -g '!site-packages' "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
rgfzf zshrc
v log.vim
v .zshrc
exit
cd .config
..
zsh --version
v .zshrc
chpwd
v .zshrc
exit
cd .config
ls
..
v .zshrc
exit
cd .config
..
cd .config
..
v .zshrc
exit
cd .config
cd zsh
v .zshrc
exit
cd .config
cd alacritty
..
clear
~
ls
la
l
~
clear
~
v .config/zsh/.zshrc
exit
cd .config
cd alacritty
~
exit
function rgfzf {\
 command rg --color=always --line-number --no-heading --smart-case -g '!Library' -g '!site-packages' "${*:-}" | command fzf -d':' --ansi --preview "command bat -p --color=always {1} --highlight-line {2}" --preview-window ~8,+{2}-5 | awk -F':' '{print $1}'\
}
v .config/zsh/.zshrc
source .zshrc
source ~/.config/zsh/.zshrc
rgfzf jsonslurper
rgfzf
rgfzf jsonslurper
v | rgfzf jsonslurper
v | rgfzf
rgfzf jsonslurper | v
exit
fzf
fzf | v
clear
v "$(fzf)"
v "$(fzf .zshrc)"
v "$(fzf zshrc)"
v "$('fzf zshrc')"
v "$(fzf 'zshrc')"
v "$(fzf \"zshrc\")"
v $(fzf zshrc)
v $(fzf 'zshrc')
v $(fzf)
exit
exit
rg
brew upgrade rg
exit
rg
brew --help
rg --files --hidden -g '!Library/' -g '!Applications' -g '!Desktop' -g '!.git'
which rg
exit
clear
ls
cd org
fzf
exit
exit
cd .vim
..
cat .vimrc
grep '.*map ' .vimrc
grep '.*map ' .vimrc | sed 's/<silent>|<expr>|<buffer|//'
grep '.*map ' .vimrc | sed 's/<silent>|<expr>|<buffer.//'
grep '.*map ' .vimrc | sed 's/<silent>|<expr>|<buffer>//'
grep '.*map ' .vimrc | sed 's/<silent>//'
grep '.*map ' .vimrc | sed 's/<silent> //'
grep '.*map ' .vimrc | sed -e 's/<silent> //' -e 's/<expr> //'
grep '.*map ' .vimrc | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer>//'
grep '.*map ' .vimrc | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer>//' | sort
grep '.*map ' .vimrc | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort
grep '.*map ' .vimrc | grep -v '".*' sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | awk '{ print $2 }\
'
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | awk '{ print $3 }'
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | awk '{ print $2 $3 $4 }'
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | awk '{ print $2, $3, $4 }'
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | awk '{ print $2, $3 }'
grep '.*map ' .vimrc | grep -v '".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/.//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).* (.*) .* (".*)/\1 \2 \3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).* (.*) .* (".*)/$1 $2 $3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).* /$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).*/$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/^(.).*/$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/^(.).*/$1/g'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/^(.)/$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.)/$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).*/$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/.*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/..*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/(.).*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).*/$1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).* \(.*\) .*/\1 /'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).* \(.*\) .*/\1 \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).* \(".*\)/\1 \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).* \(.*\) \(".*\)/\1 \2 \3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).* \(.*\) .* \(".*\)/\1 \2 \3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).*? \(.*\) .* \(".*\)/\1 \2 \3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).*\? \(.*\) .* \(".*\)/\1 \2 \3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/\(.\).* \(.*\).* \(".*\)/\1 \2 \3/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed 's/noremap//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' | sed 's/\(. .*\) .*/\1 \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. .*\) .*/\1 \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. .*\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. .*?\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. .*\?\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. .*\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. \w+\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. \w\+\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9]\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9]\)/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9]\).*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9]\) .*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9]\) .*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(. [a-zA-Z0-9]\)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9]\)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]\)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]\+\)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]+\)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/^. [a-zA-Z0-9<>]\+//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/^. [a-zA-Z0-9<>]+//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/^. [a-zA-Z0-9<>]//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/^. [a-zA-Z0-9<>]*//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\) /\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\)/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\)//'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\)/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]* \)/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]* .*\)/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*.*\)/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*/\1/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*\(".*\)/\1 \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | grep toggle | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*\(".*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*\(".*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*"\(.*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | grep '"" sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*"\(.*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | grep '"' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*"\(.*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | grep '""' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*"\(.*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | grep '""' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*"\s*\(.*\)/\1 -> \2/'
grep '.*map ' .vimrc | grep -v '^".*' | grep '""' | sed -e 's/<silent> //' -e 's/<expr> //' -e 's/<buffer> //' | sort | sed -e 's/noremap//' -e 's/\(^. [a-zA-Z0-9<>]*\).*" *\(.*\)/\1 -> \2/'
ch+x which.sh
./which.sh
which rg
./which.sh
..
cd .config/nvim
cd lua
v myFuncs.lua
v usercommands.lua
ls
echo hello
exit
echo hello
exit
hello world
exit
echo hello
exit
echo hello
echo www
exit
echo www
echo ehllo
echo what
exit
echo what
exit
echo perfect
echo hello
echo noice
./which.sh
exit
./which.sh
mapfile
bash mapfile
sh readarray -t y <<< "hello\
world"
sh ls
bash ls
bash -c "ls"
bash -c "readarray"
bash -c "mapfile"
./which.sh
ls *vim
ls .vimrc
bash -c ./which.sh
./which.sh
1./which.sh
./which.sh
bash ./which.sh
bash --version
type bash
which bash
./which.sh
./which.sh | column
tldr column
tldr column --output-width 30
./which.sh | column --output-width 30
man column
./which.sh | column
./which.sh | column -x
./which.sh | column
./which.sh | column -c3
./which.sh | column -c
./which.sh | column -c 1
./which.sh | column -c 2
./which.sh | column -c .3
./which.sh | column -t
./which.sh | column
./which.sh | column | sed 's/^/   /'
./which.sh
clear
exit
./which.sh | column | sed 's/^/   /'
./which.sh
./which.sh | column | sed 's/^/   /'
./which.sh
./which.sh | column | sed 's/^/   /'
./which.sh | column
./which.sh
./which.sh | column
./which.sh t
./which.sh s
./which.sh t
./which.sh
./which.sh t
./which.sh
./which.sh t
./which.sh s
./which.sh
exit
./which.sh v
./which.sh b
./which.sh
./which.sh b
./which.sh
;
unset user_input
while [[ "${user_input}" != "exit" ]] ; do\
 read -t .1 user_input\
done
read -n1 ; echo You entered $REPLY
bash -c 'read -n1 ; echo You entered $REPLY'
read -n1 -p "hello: " ynq
bash -c 'read -n1 -p "hello: " ynq'
read -t3 -k1 -s user_decision
echo $user_decision
read -t3 -k1 -s ud; echo $ud
./which.sh
..
cd lazyvim
cd lua
cd config
cd old
...
....
../..
..
cd nvim.bak
cd lua
cd pete
..
rgfzf jq
rgfzf -g '!zsh' jq
ef
ezf
rgfzf jq
ezf
. zsh/zsh-functions
rgfzf jq
rgfzf jsonslurper | v
clear
ps
exit
v $(fzf)
v
v "$(fzf \"zshrc\")"
v "$(rgfzf)"
ls
cd .config
v "$(rgfzf)"
rgfzf =j
rgfzf '=j'
v "$(rgfzf)"
zsh
cd zsh
v .zshrc
exit
exit
exit
which xmllint
cd .vim
cd autoload
vim
v plug.vim
ssheval
sshadd
..
vim
fzf rg
fzf
eze
rg --debug
cd .config
rg --debug json
rg jsonslurper
rg json
echo $RIPGREP_CONFIG_PATH
exit
exit
echo $RIPGREP_CONFIG_PATH
rg jsonslurper
rg --debug jsonslurper
cd .config
rg export
v .ripgreprc
rg --debug export
v .ripgreprc
source .ripgreprc
rg export
v .ripgreprc
rg export
~
rg export
rg jsonslurper
rg --files | rg jsonslurper
rg --files jsonslurper
rg --files
rg jsonslurper | fzf
cd .config
v .ripgreprc
..
rg jsonslurper | fzf
rg jsonslurper
v ~/.config/.ripgreprc
rg jsonslurper
v ~/.config/.ripgreprc
rg jsonslurper
v ~/.config/.ripgreprc
rg jsonslurper
rg jsonslurper | fzf
rg --files | rg jsonslurper
rg --files
rg --type-list
vim
sshadd
ssheval
sshadd
vim
v
cd .config
NVIM_APPNAME=lazyvim nvim
//
~
NVIM_APPNAME=lazyvim nvim
vim
v
v .config/.ripgreprc
clear
cd .config/nvim/syntax
..
cd lazyvim/
cd indent
cd ~/.vim
mkdir syntax
cd syntax
..
rm -r syntax
1
2
..
cd nvim
cd indent
2
1
3
4
5
ls
mkdir indent
cp .zshrc ~/.config/nvim/indent/groovy.vim .
cd indent
cp ~/.config/nvim/indent/groovy.vim .
emacs
emacsclient
vim
clear
v
cd edi_entityId
clear
test.yaml
boomirun test.yaml
~
alias c='chrome-cli'
c
c --help
c info
c execute "const link = document.querySelector('a[data-locator=\"link-atom-management\"]');\
const href = link.getAttribute('href');\
window.open(href, '_blank');\
"
c execute "alert('hello')"
c info
c execute alert('hello')
c execute --help
man chrome-cli
open -a "Google Chrome" --args --remote-debugging-port=9222
c execute "alert('hello')"
\ps au
\ps a
\ps x
\ps x | \grep chrome
\ps x | \grep chrome | \grep port
\ps x | \grep chrome | grep port
\ps x | \grep chrome
open -a "Google Chrome" --args --remote-debugging-port=9222
c execute "alert('hello')"
chrome-cli execute '(function hello() { alert("hello"); }())'
c info
chrome-cli execute '(alert("hello"))'
c info
chrome-cli execute 'alert("hello");'
\ps x | \grep chrome
info
c info
chrome-cli execute '(function () { alert("hello"); }())'
chrome-cli execute '(function () { alert("hello"); }())' -t 99467533
chrome-cli execute '(function () { alert("hello"); }())' -t 994867533
chrome-cli execute "(function () { const link = document.querySelector('a[data-locator=\"link-atom-management\"]'); const href = link.getAttribute('href'); window.open(href, '_blank'); }())" -t 994867533\

brew search chrome-remote-interface
npm install -g chrome-remote-interface
chrome-remote-interface --port 9222 --eval "console.log('Hello from the command line!');"
chrome-remote-interface --help
chrome-remote-interface new "www.boomi.com"
chrome-remote-interface new "https://www.boomi.com"
chrome-remote-interface inspect
chrome-remote-interface inspect "Runtime.evaluate({expression: 'alert(\"hello\")'})"
open -a "Google Chrome" --args --remote-debugging-port=9222
ls
boomirun test.yaml
arc-cli info
arc-cli execute '(function() {alert "hello"}())'
chrome-cli execute '(function () { alert("hello"); }())'
chrome-cli info
chrome-cli execute '(function () { alert("hello"); }())'
arc-cli execute '(function () { alert("hello"); }())'
v
exit
exit
boomirun test.yaml
exit
\:setlocal winfixheight
exit
\:setlocal winfixheight
exit
\:setlocal winfixheight
boomirun test.yaml
iboomirun test.yaml
boomirun test.yaml
exit
vim
\:setlocal winfixheight
cd /Applications/Boomi_AtomSphere/Atom/Atom_Boomi_atom_192.168.0.185/bin
./restart.sh
exit
\:setlocal winfixheight
t
exit
\:setlocal winfixheight
arc-cli execute '(function () { alert("hello"); }())'
goku
ar
echo "$(arc-cli execute '(function () { alert("hello"); }())')" })')"
echo "$(arc-cli execute '(function () { alert("hello"); }())')"
goku
arc-cli execute '(function () { alert(); }())'
goku
which arc-cli
goku
arc-cli execute '(function () { alert(); }())'
osascript -e '!!'
arc-cli execute '(function () { alert(); }())'
osascript -e 'do shell script "ls"'
osascript -e 'do shell script "arc-cli"'
osascript -e 'do shell script "/usr/bin/la"'
which ls
type ls
which exa
osascript -e 'do shell script "/opt/homebrew/bin/exa"'
osascript -e 'do shell script "open"'
osascript -e 'do shell script "/bin/sh"'
exit
osascript -e 'do shell script "/bin/sh arc-cli"'
brew install --cask platypus
osascript -e 'do shell script "ls"'
vim
exit
brew install --cask ghostty
ghostty +show-config --default --docs | vim
vim
ghostty +show-config --default --docs | nvim
exit
cd .config
..
cd Library/Application\ Support/com.mitchellh.ghostty
v config
~
cd .config
mkdir ghostty
cd ghostty
touch config
ghostty +show-config --default --docs > config
v config
echo whoa
exit
exit
ghostty +list-themes
cd .config/ghostty
v config
ghostty +list-themes
fg
v config
exit
ghostty +list-themes
v config
ghostty +list-themes
exit
v ~/.config/ghostty/config
cron
crontab
tldr cron
tldr crontab
crontab -l
crontab -e
crontab -l
mail
exit
touch .hushlogin
exit
v ~/.config/ghostty/config
exit
v ~/.config/ghostty/config
exit
v ~/.config/ghostty/config
zsh
v ~/.config/ghostty/config
vim
ghostty +list-themes
v ~/.config/ghostty/config
l
clear
v ~/.config/ghostty/config
l
vim
tmux
v .tmux.conf
exit
v .tmux.conf
256
exit
v .tmux.conf
256
v .tmux.conf
ghostty +show-config --default --docs
ghostty +show-config --default --docs | fzf
ghostty --help
ghostty +list-keybinds
ghostty --help
ghostty +list-actions
tmux
brew search zoxide
brew install zoxide
echo $PAGER
echo env
env
export MANPAGER="$(which bat)"
echo $MANPAGER
man bat
source .zshenv
echo $MANPAGER
man bat
source .zshrc
cd org
ls
cd ..
~
cd org
~
cd org
..
~
cd or
~
z /Users/petermariani/org
yazi
~
clear
~
cd .config
cd zsh
v .zshrc
y
~
mkdir -p .config/yazi
cd .config/yazi
touch yazi.toml keymap.toml theme.toml
v yazi.toml
goku
ch+x arc-alert.sh
./arc-alert.sh
which arc-cli
./arc-alert.sh
goku
mkdir -p arc-alert.sh.app/Contents/MacOS
mv arc-alert.sh arc-alert.sh.app/Contents/MacOS
arc-alert.sh.app
..
open arc-alert.sh.app
bat arc-alert.log
open arc-alert.sh.app
open -a arc-alert.sh.app
cp arc-alert.sh.app/Contents/MacOS/arc-alert.sh .
./arc-alert.sh
echo $HOME
bat arc-alert.log
cat arc-alert.log
clear
open -a arc-alert.sh.app --args '(function () { alert(); }())'
clear
!
~
clear
arc-cli
arc-cli --help
arc-cli list windows
arc-cli list windows -j
arc-cli -j list windows
OUTPUT_FORMAT=json arc-cli list windows
a
alias a='OUTPUT_FORMAT=json arc-cli'
a list windows
as -h
as --hwlp
ar --help
ea
a --help
.a
yg
clear
a
.z
source .config/aliases
a
a.lt
alt
alw
alt | jq .tabs
alt | jq .tabs[*].windowId
alt | jq .tabs[*]windowId
alt | jq .tabs[].windowId
alt | jq '.tabs[].windowId'
alt | jq '.tabs[].id'
alt | jq '.tabs[] | select(.title | contains("Gmail")) | .id'
v
ls
l
mkdir -p arc-focus-tab.sh.app/Contents/MacOS
cd arc-focus-tab.sh.app/Contents
cd MacOS
ls
ch+x arc-focus-tab.sh
~
open -a arc-focus-tab.sh --args 'Gmail'
open -a arc-focus-tab.sh.app --args 'Gmail'
bat arc-focus-tab.sh.app
bat arc-focus-tab.log
"open"
boomirun hello
open
"open"
open -a
open -a arc-focus-tab.sh.app --args
open -a arc-focus-tab.sh.app --args Gmail
open -a arc-focus-tab.sh.app --args Gmail; bat arc-focus-tab.log
open -a arc-focus-tab.sh.app --args Gmail
open -a arc-focus-tab.sh.app --args 'Gmail"'
open -a arc-focus-tab.sh.app --args 'Gmail'
open -a arc-focus-tab.sh.app --args Gmail; bat arc-focus-tab.log
arc-cli list tabs
open -a arc-focus-tab.sh.app --args Gmail; bat arc-focus-tab.log
\
pen -a arc-focus-tab.sh.app --args Gmail; bat -pp arc-focus-tab.log
OUTPUT_FORMAT=json arc-cli list tabs | jq '.tabs[] | select(.title | contains(\"Gmail\")) | .id'
OUTPUT_FORMAT=json arc-cli list tabs | jq '.tabs[] | select(.title | contains("Gmail")) | .id'
open -a arc-focus-tab.sh.app --args Gmail; bat -pp arc-focus-tab.log
arc-cli -h
open -a arc-focus-tab.sh.app --args Gmail; bat -pp arc-focus-tab.log
open -a arc-focus-tab.sh.app --args Gmail
arc-cli -h
open -a arc-focus-tab.sh.app --args Gmail
arc-cli activate -t "$(open -a arc-focus-tab.sh.app --args Gmail)"
open -a arc-focus-tab.sh.app --args Gmail
alt | jq '.tabs[] | select(.title | contains("Gmail")) | .id'
arc-cli activate -t "C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B"
arc-cli activate -t C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B
arc-cli activate -t 'C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B'
arc-cli info
arc-cli list tablinks
arc-cli list links
arc-cli activate -t 'C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B'
arc-cli activate -t C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B
arc-cli activate -t "C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B"
arc-cli source
a --help
a open 'www.google.com'
a open 'https://www.google.com'
a open www.google.com
a open "www.google.com"
a --help
a open "www.google.com"
arc-cli activate -t "C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B"
arc-cli activate -t C3C59A2B-5865-4AB7-AE64-B0D42B0BED1B
bat ~/arc-focus-tab.sh.app/Contents
bat arc-focus-tab.log
: 1735681812:0;clear
: 1735681827:0;gy
